name: Deploy Node.js Lambda to AWS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_BUCKET: my-unique-tfstate-bucket
      TF_DDB_TABLE: my-tfstate-lock

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install

    - name: Package Lambda (zip)
      run: |
        mkdir -p dist
        zip -r dist/lambda.zip index.js node_modules

    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        aws-region: ${{ env.AWS_REGION }}

    - name: Ensure tfstate S3 & DynamoDB exist
      run: |
        aws s3api create-bucket --bucket $TF_BUCKET --region $AWS_REGION --create-bucket-configuration LocationConstraint=$AWS_REGION || echo "Bucket exists"
        aws s3api put-bucket-versioning --bucket $TF_BUCKET --versioning-configuration Status=Enabled
        aws dynamodb create-table \
          --table-name $TF_DDB_TABLE \
          --attribute-definitions AttributeName=LockID,AttributeType=S \
          --key-schema AttributeName=LockID,KeyType=HASH \
          --billing-mode PAY_PER_REQUEST || echo "DynamoDB exists"

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan

    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
